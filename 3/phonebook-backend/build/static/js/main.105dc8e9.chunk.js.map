{"version":3,"sources":["components/Filter.js","components/addresses.js","components/PersonForm.js","components/Phonebook.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Filter","phonebook","setFiltered","filtered","useState","filter","setFilter","value","onChange","event","preventDefault","target","address","name","toLowerCase","includes","number","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","setPhonebook","setNotification","setName","setNumber","onSubmit","current","find","undefined","alert","window","confirm","newNumber","phoneService","console","log","length","concat","setTimeout","type","Phonebook","setError","key","onClick","catch","Notification","message","error","className","App","notification","useEffect","initialData","currentAddresses","map","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.105dc8e9.chunk.js","sourcesContent":["import React , { useState } from 'react'\n\nconst Filter = ({ phonebook, filtered, setFiltered }) => {\n    const [filter, setFilter] = useState('');\n\n    const filterAddresses = (event) => {\n        event.preventDefault();\n        if (event.target.value !== '') {\n            setFilter(event.target.value);\n            setFiltered(phonebook.filter(address =>\n                address.name.toLowerCase().includes(event.target.value.toLowerCase()) || address.number.includes(event.target.value)))\n            \n        } else {\n            setFilter('');\n            setFiltered(phonebook);\n        }\n    }\n    return (\n        <>\n            <form>\n                filter shown with:\n                <input\n                        value={filter}\n                        onChange={filterAddresses}\n                />\n            </form>\n        </>\n    )\n}\n\nexport default Filter","import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n}\n\nexport default { getAll, create, update, deleteObject }","import React, { useState } from 'react';\nimport phoneService from './addresses';\n\nconst PersonForm = ({ phonebook, setPhonebook, setFiltered, setFilter, setNotification }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const addNumber = (event) => {\n        event.preventDefault();\n        \n        var current = phonebook.find(address => name.toLowerCase() === address.name.toLowerCase());\n\n        if (current === undefined) {\n            current = {\n                name:' ',\n                number:' '\n            }\n        }\n        \n        if (current.name === name && current.number === number) {\n            alert(`${name} already in phonebook`);\n        } else if (current.number !== number && current.name === name) {\n            if (window.confirm(`${current.name} is already in the phonebook, would you like to change their number?`)) {\n                const newNumber = { ...current, number: number };\n                phoneService\n                    .update(current.id, newNumber)\n                    .then(data => {\n                        phoneService.getAll().then(data => {\n                            console.log(data);\n                            setFiltered([...data]);\n                            setPhonebook([...data]);\n                            setName('');\n                            setNumber('');\n                        })\n                    })\n            }\n        } else {\n            const address = {\n                name: name,\n                number: number,\n                id: phonebook.length+1\n            };\n            \n            phoneService.create(address).then(setPhonebook(phonebook.concat(address)));\n            setFiltered(phonebook.concat(address));\n            setFilter('');\n            setName('');\n            setNumber('');\n            setNotification(`Added ${address.name} to phonebook`);\n            setTimeout(() => setNotification(null), 3000);\n            \n        }\n    }\n\n    const handleName = (event) => {\n        setName(event.target.value);\n    }\n\n    const handleNumber = (event) => {\n        setNumber(event.target.value);\n    }\n\n    return (\n        <form onSubmit={addNumber}>\n            Name:\n            <input\n                value={name}\n                onChange={handleName}\n            />\n            <br></br>\n            Number:\n            <input\n                value={number}\n                onChange={handleNumber}\n            />\n            <br></br>\n            <button type=\"submit\">add</button>\n        </form>\n    )\n}\nexport default PersonForm","import React from 'react'\nimport phoneService from './addresses'\n\nconst baseUrl = 'api/persons';\nconst Phonebook = ({ address, setFiltered, setPhonebook, setNotification, setError }) => \n        <li> \n            {address.name + ' '} \n            {address.number + ' '}\n            <button key={`button${address.id}`} onClick={() => {\n                if (window.confirm(`Are you sure you want to delete ${address.name}?`))\n                    phoneService\n                        .deleteObject(address.id)\n                        .then(response => {\n                            phoneService.getAll().then(data => {\n                                console.log(data);\n                                setFiltered([...data])\n                                setPhonebook([...data])\n                            }) \n                        })\n                        .catch(response => {\n                            phoneService.getAll().then(data => {\n                                setError(true);\n                                setNotification(`${address.name} already deleted from phonebook`);\n                                setFiltered([...data]);\n                                setPhonebook([...data]);\n                                setTimeout(() => {\n                                    setNotification(null)\n                                    setError(false)\n                                }, 3000);\n                            })\n                        })\n                        \n                }}>\n                delete\n            </button>\n        </li>\n\nexport default Phonebook","import React from 'react'\n\nconst Notification = ({message, error}) => {\n    if (message === null) {\n        return null\n    }\n\n    if (error) {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Phonebook from './components/Phonebook';\nimport phoneService from './components/addresses';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [filter, setFilter] = useState('');\n  const [phonebook, setPhonebook] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [notification, setNotification] = useState(null);\n  const [error, setError] = useState(false);\n  \n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then(initialData => {\n        setPhonebook(initialData);\n        setFiltered(initialData);\n      })\n      .catch((error) => {\n        console.log(\"Houston, we have a problem: \\n\", error);\n      })\n    }, []);\n  \n  \n  \n  const currentAddresses = filtered.map(address => {\n      return (\n        <>\n          <Phonebook \n            key={address.id} \n            address={address}\n            setPhonebook={setPhonebook}\n            setFiltered={setFiltered}\n            setNotification={setNotification}\n            setError={setError}\n          />\n        </>\n      )\n    })\n  return (\n  <>\n    <Notification message={notification} error={error} />\n    <h1>PHONEBOOK</h1> \n    <Filter phonebook={phonebook} filtered={filtered} setFiltered={setFiltered} />\n\n    <h1>Add a new</h1>\n    <PersonForm phonebook={ phonebook } \n                setPhonebook={ setPhonebook } \n                setFiltered={ setFiltered } \n                setFilter={ setFilter }  \n                setNotification={ setNotification }\n    />\n\n    <h1> Numbers </h1>\n    { currentAddresses }\n    \n  </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}